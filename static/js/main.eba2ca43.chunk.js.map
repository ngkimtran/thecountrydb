{"version":3,"sources":["context.js","components/SearchForm.js","components/Country.js","components/Loading.js","components/CountryList.js","pages/Home.js","pages/Error.js","pages/SingleCountry.js","components/Navbar.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","searchTerm","setSearchTerm","countries","setCountries","filterParam","setFilterParam","fetchCountries","useCallback","a","fetch","response","json","data","message","newCountries","map","item","name","population","region","capital","id","numericCode","flag","filter","country","console","log","useEffect","Provider","value","useGlobalContext","useContext","SearchForm","searchValue","useRef","current","focus","className","onSubmit","e","preventDefault","TextField","inputRef","onChange","placeholder","InputProps","startAdornment","InputAdornment","IconButton","disableUnderline","target","Country","to","src","alt","Loading","CountryList","length","Home","Error","SingleCountry","useParams","setCountry","nativeName","subregion","topLevelDomain","currencies","languages","borders","getCountry","xmlns","width","height","fill","viewBox","fillRule","d","index","Navbar","App","class","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eba2ca43.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react'\r\n\r\nconst url = 'https://restcountries.eu/rest/v2/all'\r\nconst url_search = 'https://restcountries.eu/rest/v2/name/'\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [countries, setCountries] = useState([]);\r\n    const [filterParam, setFilterParam] = useState('All');\r\n\r\n    const fetchCountries = useCallback(async () => {\r\n        setLoading(true);\r\n        if(searchTerm === '') {\r\n            try { \r\n                const response = await fetch(`${url}`);\r\n                const data = await response.json();\r\n\r\n                if (data.message === 'Not Found') {\r\n                    setCountries([]);\r\n                }\r\n                else {\r\n                    const newCountries = data.map((item) => {\r\n                        const {\r\n                            name,\r\n                            population,\r\n                            region,\r\n                            capital,\r\n                            numericCode,\r\n                            flag\r\n                        } = item;\r\n\r\n                        return {\r\n                            name,\r\n                            population,\r\n                            region,\r\n                            capital,\r\n                            id: numericCode,\r\n                            flag\r\n                        }\r\n                    })\r\n                    if(filterParam === 'All') {\r\n                        setCountries(newCountries);\r\n                    }\r\n                    else {\r\n                        setCountries(newCountries.filter((country) => \r\n                           country.region === filterParam\r\n                        ));\r\n                    }\r\n                }\r\n\r\n                setLoading(false);\r\n            } catch(e) {\r\n                console.log(e);\r\n                setLoading(false);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            try { \r\n                const response = await fetch(`${url_search}${searchTerm}`);\r\n                const data = await response.json();\r\n    \r\n                if (data.message === 'Not Found') {\r\n                    setCountries([]);\r\n                }\r\n                else {\r\n                    const newCountries = data.map((item) => {\r\n                        const {\r\n                            name,\r\n                            population,\r\n                            region,\r\n                            capital,\r\n                            numericCode,\r\n                            flag\r\n                        } = item;\r\n    \r\n                        return {\r\n                            name,\r\n                            population,\r\n                            region,\r\n                            capital,\r\n                            id: numericCode,\r\n                            flag\r\n                        }\r\n                    })\r\n                    if(filterParam === 'All') {\r\n                        setCountries(newCountries);\r\n                    }\r\n                    else {\r\n                        setCountries(newCountries.filter((country) => \r\n                           country.region === filterParam\r\n                        ));\r\n                    }\r\n                }\r\n    \r\n                setLoading(false);\r\n            } catch(e) {\r\n                console.log(e);\r\n                setLoading(false);\r\n            }\r\n            return;\r\n        }\r\n    }, [filterParam, searchTerm]);\r\n\r\n    useEffect(() => {\r\n        fetchCountries();\r\n    }, [filterParam, searchTerm, fetchCountries]);\r\n\r\n    return (\r\n        <AppContext.Provider \r\n            value={{loading, countries, setSearchTerm, setFilterParam}}\r\n        >\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n}\r\n\r\nexport { AppContext, AppProvider }","import React, { useRef, useEffect } from 'react'\r\nimport {useGlobalContext} from '../context'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst SearchForm = () => {\r\n    const { setSearchTerm, setFilterParam } = useGlobalContext();\r\n    const searchValue = useRef('');\r\n\r\n    useEffect(() => {\r\n        searchValue.current.focus();\r\n    }, [])\r\n\r\n    const searchCountry = () => {\r\n        setSearchTerm(searchValue.current.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    \r\n    const handleFilter = (e) => {\r\n        setFilterParam(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <section className=\"section search\">\r\n            <form className=\"search-form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-control\">\r\n                    <TextField \r\n                        className=\"form-input\"\r\n                        inputRef={searchValue} \r\n                        onChange={searchCountry} \r\n                        placeholder=\"Search for a country...\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment>\r\n                                    <IconButton>\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            ),\r\n                            disableUnderline: true\r\n                        }\r\n                    }\r\n                    \r\n                    />\r\n                </div>\r\n            </form>\r\n\r\n            <div className=\"filter-wrapper\">\r\n                <select onChange={handleFilter} className=\"filter-form\">\r\n                    <optgroup>\r\n                        <option value=\"All\">Filter by Region</option>\r\n                        <option value=\"Africa\">Africa</option>\r\n                        <option value=\"Americas\">Americas</option>\r\n                        <option value=\"Asia\">Asia</option>\r\n                        <option value=\"Europe\">Europe</option>\r\n                        <option value=\"Oceania\">Oceania</option>\r\n                    </optgroup>\r\n                </select>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Country = ({ name, population, region, capital, flag }) => {\r\n    return (\r\n        <Link to={`/thecountrydb/country/${name}`}>\r\n            <article className=\"country\">\r\n                <div className=\"img-container\">\r\n                    <img src={flag} alt={name} />\r\n                </div>\r\n                <div className=\"country-footer\">\r\n                    <h3>{name}</h3>\r\n                    <p>\r\n                        <span className=\"footer-data\">Population: </span>\r\n                        {population}\r\n                    </p>\r\n                    <p>\r\n                        <span className=\"footer-data\">Region: </span>\r\n                        {region}\r\n                    </p>\r\n                    <p>\r\n                        <span className=\"footer-data\">Capital: </span>\r\n                        {capital}\r\n                    </p>\r\n                </div>\r\n            </article>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            Now loading...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, {useEffect} from 'react'\r\nimport { useGlobalContext } from '../context'\r\nimport Country from './Country'\r\nimport Loading from './Loading'\r\n\r\nconst CountryList = () => {\r\n    const {setSearchTerm, countries, loading} = useGlobalContext();\r\n\r\n    useEffect(() => {\r\n        setSearchTerm('');\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    if(loading) {\r\n        return <Loading />\r\n    }\r\n\r\n    if(countries.length < 1) {\r\n        return (\r\n            <h2 className=\"section-title\">\r\n                No country found.\r\n            </h2>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className=\"section\">\r\n            <div className=\"countries-center\">\r\n                {countries.map((item) => {\r\n                    return <Country key={item.id} {...item} />\r\n                })}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CountryList\r\n","import React from 'react'\r\nimport SearchForm from '../components/SearchForm'\r\nimport CountryList from '../components/CountryList'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <main>\r\n            <SearchForm />\r\n            <CountryList />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <section className=\"section error-page\">\r\n            <div className=\"error-container\">\r\n                <h1>oops! it's a dead end.</h1>\r\n                <Link to=\"/thecountrydb/\" className=\"btn btn-primary\">back home</Link>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { useState, useEffect } from 'react'\r\nimport Loading from '../components/Loading'\r\nimport {useParams, Link } from 'react-router-dom'\r\n\r\nconst url = 'https://restcountries.eu/rest/v2/name/'\r\nconst fullText='?fullText=true'\r\n\r\nconst SingleCountry = () => {\r\n    const {name} = useParams();\r\n    const [loading, setLoading] = useState(false);\r\n    const [country, setCountry] = useState(null);\r\n    // const [border, setBorder] = useState([]);\r\n\r\n    // const borderCountries = async (item) => {\r\n    //     try {\r\n    //         const response = await fetch(`https://restcountries.eu/rest/v2/alpha/${item}`)\r\n    //         const data = await response.json()\r\n            \r\n    //         if(data) {\r\n    //             const newBorder = data.name;\r\n    //             setBorder(...border, newBorder);\r\n                \r\n    //         }\r\n    //         else {\r\n    //             setBorder([]);\r\n    //         } \r\n    //     } catch(e) {\r\n    //         console.log(e)\r\n    //     }\r\n    // }\r\n\r\n    useEffect(() => {\r\n        const getCountry = async () => {\r\n            setLoading(true);\r\n    \r\n            try {\r\n                const response = await fetch(`${url}${name}${fullText}`);\r\n                const data = await response.json();\r\n    \r\n                if(data[0]) {\r\n                    const {\r\n                        nativeName,\r\n                        population,\r\n                        region,\r\n                        subregion,\r\n                        capital,\r\n                        topLevelDomain,\r\n                        currencies,\r\n                        languages,\r\n                        borders,\r\n                        flag\r\n                    } = data[0];\r\n                    const newCountry = {\r\n                        nativeName,\r\n                        population,\r\n                        region,\r\n                        subregion,\r\n                        capital,\r\n                        topLevelDomain,\r\n                        currencies,\r\n                        languages,\r\n                        borders,\r\n                        flag\r\n                    }\r\n                    setCountry(newCountry);\r\n    \r\n                }\r\n                else {\r\n                    setCountry(null);\r\n                }\r\n                setLoading(false);\r\n            }\r\n            catch (e) {\r\n                console.log(e);\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        getCountry();  \r\n    }, [name]);\r\n\r\n    \r\n\r\n    if(loading) {\r\n        return <Loading />\r\n    }\r\n    if(!country) {\r\n        return (\r\n            <section className=\"section country-section\">\r\n                <h2 className=\"section-title\">no country to display</h2>\r\n                <Link to=\"/thecountrydb/\" className=\"btn btn-primary\">back home</Link>\r\n            </section>\r\n        )\r\n    }\r\n    else {\r\n        const {\r\n            nativeName,\r\n            population,\r\n            region,\r\n            subregion,\r\n            capital,\r\n            topLevelDomain,\r\n            currencies,\r\n            languages,\r\n            borders,\r\n            flag\r\n        } = country;\r\n\r\n        return (\r\n            <section className=\"section country-section\">\r\n                <Link to=\"/thecountrydb/\">\r\n                    <button className=\"btn btn-primary\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\">\r\n                        <path fillRule=\"evenodd\" d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"/>\r\n                    </svg>\r\n                    <span>back</span>    \r\n                    </button>\r\n                </Link>\r\n                <div className=\"item\">\r\n                    <img src={flag} alt={name} />\r\n                    <div className=\"item-info\">\r\n                        <h2 className=\"item-title\">{name}</h2>\r\n                        <div className=\"item-data\">\r\n                            <p>\r\n                                <span>native name: </span>\r\n                                {nativeName}\r\n                            </p>\r\n                            <p>\r\n                                <span>population: </span>\r\n                                {population}\r\n                            </p>\r\n                            <p>\r\n                                <span>region: </span>\r\n                                {region}\r\n                            </p>\r\n                            <p>\r\n                                <span>sub region: </span>\r\n                                {subregion}\r\n                            </p>\r\n                            <p>\r\n                                <span>capital: </span>\r\n                                {capital}\r\n                            </p>\r\n                            <p>\r\n                                <span>top level domain: </span>\r\n                                {topLevelDomain}\r\n                            </p>\r\n                            <p>\r\n                                <span>currencies: </span>\r\n                                {currencies[0].name}\r\n                            </p>\r\n                            <p>\r\n                                <span>languages: </span>\r\n                                {languages.map((item, index) => (\r\n                                    <>{item.name}{index < languages.length - 1 ? ',\\u00A0' : ''}</>\r\n                                ))}\r\n                            </p>\r\n                        </div>\r\n                        <p className=\"borders\">\r\n                            <span>border countries: </span>\r\n                            <div>\r\n                                {\r\n                                    borders.length < 1 ?\r\n                                        <span>none</span> :\r\n                                        borders.map((item, index) => {\r\n                                            // borderCountries(item)\r\n                                            return (\r\n                                                <span className=\"border\" key={index}>{item} </span>\r\n                                            )\r\n                                })}\r\n                            </div>\r\n                            </p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleCountry\r\n","import React from 'react'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"nav-center\">\r\n                <h1>Where in the world?</h1>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home'\nimport Error from './pages/Error'\nimport SingleCountry from './pages/SingleCountry'\nimport Navbar from './components/Navbar'\n\nfunction App() {\n  return (\n    <div class='container'>\n      <Router>\n        <Navbar />\n          <Switch>\n            <Route path=\"/thecountrydb/\" exact component={Home} />\n            <Route path=\"/thecountrydb/country/:name\" component={SingleCountry} />\n            <Route path=\"*\" component={Error} />\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}